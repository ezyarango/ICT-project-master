import pygame 
import math
import random

#variables library:
score = 0
scroll = 0
y_change = 0
gravity = 1
obstacles = (300, 450, 600, 750)
obstacle_speed = 2
active = True
player_x = 200
player_y = 200
active_frame = 0
mode = 0
count = 0

pygame.init()

clock = pygame.time.Clock()
FPS = 40

screen_width = 900
screen_height = 450
screen = pygame.display.set_mode((screen_width,screen_height))

pygame.display.set_caption("In the Wilderness")

animation_list = []
animation_steps = 6

for x in range(animation_steps):
frame_0 = pygame.image.load("assets/jump1.PNG")
frame_1 = pygame.image.load("assets/jump2.PNG")
frame_2 = pygame.image.load("assets/jump3.PNG")
frame_3 = pygame.image.load("assets/jump4.PNG")
frame_4 = pygame.image.load("assets/jump5.PNG")
frame_5 = pygame.image.load("assets/jump6.PNG")

fg = pygame.image.load("foreground_transparent.png").convert_alpha()

bg = pygame.image.load("nightforestbg.jpg").convert()
bg_width = bg.get_width()

tiles = math.ceil(screen_width / bg_width) + 1

floof = pygame.image.load("assets/idle1.png").convert_alpha()

obst1 = pygame.image.load("obstacles/bush1.png").convert_alpha()
obst2 = pygame.image.load("obstacles/bush2.png").convert_alpha()
obst3 = pygame.image.load("obstacles/bush3.png").convert_alpha()
obst4 = pygame.image.load("obstacles/bush4.png").convert_alpha()

advanced_width = int(obst1.get_width()* 0.4)
advanced_height = int(obst1.get_height()* 0.4)
obst1 = pygame.transform.scale(obst1, (advanced_width, advanced_height))
obst2 = pygame.transform.scale(obst2, (advanced_width, advanced_height))
obst3 = pygame.transform.scale(obst3, (advanced_width, advanced_height))
obst4 = pygame.transform.scale(obst4, (advanced_width, advanced_height))

new_width = int(floof.get_width() * 0.1)  
new_height = int(floof.get_height() * 0.1)  
floof = pygame.transform.scale(floof, (new_width, new_height))

new_w2 = int(frame_0.get_width()* 0.1)
new_h2 = int(frame_0.get_height()* 0.1)
frame_0 = pygame.transform.scale(frame_0, (new_w2, new_h2))
frame_1 = pygame.transform.scale(frame_1, (new_w2, new_h2))
frame_2 = pygame.transform.scale(frame_2, (new_w2, new_h2))
frame_3 = pygame.transform.scale(frame_3, (new_w2, new_h2))
frame_4 = pygame.transform.scale(frame_4, (new_w2, new_h2))
frame_5 = pygame.transform.scale(frame_5, (new_w2, new_h2))


obstacles = []

def generate_obstacle(last_x):
    x_position = last_x + 500 
    y_position = 200  
    obstacle_type = random.choice([obst1, obst2, obst3, obst4])  
    return [x_position, y_position, obstacle_type]

last_x = 0  
for i in range(3): 
    obstacles.append(generate_obstacle(last_x))
    last_x = obstacles[-1][0] 


floof_rect = floof.get_rect()  # This gives the Rect for the sprite

   # To get the x and y position of the sprite:

running = True
while (running):

  clock.tick(FPS)

  for i in range(0, tiles):
   screen.blit(bg , (i * bg_width + scroll, 0))
 
   scroll -= 5
 
  if abs(scroll) > bg_width:
   scroll = 0

  screen.blit(fg, (0, 0))

  for obstacle in obstacles:
        x_pos, y_pos, obstacle_type = obstacle
        x_pos -= obstacle_speed
        if x_pos < -obstacle_type.get_width():
            x_pos = last_x + 500  
            last_x = x_pos  
        obstacle[0] = x_pos

        screen.blit(obstacle_type, (x_pos, y_pos)) 


  screen.blit(floof,(player_x, player_y))
  
  #screen.blit(floof, (screen_width // 2 - floof.get_width() // 2, screen_height // 2 - floof.get_height() // 2))
  
  screen.blit(frame_0, (170, 400))
  screen.blit(frame_1, (180,145))
  screen.blit(frame_2, (185, 125))
  screen.blit(frame_3, (250, -20))
  screen.blit(frame_4, (300, 10))
  screen.blit(frame_5, (350, 30))

  for event in pygame.event.get():
   if (event.type == pygame.QUIT):
       running = False

  pygame.display.update()              

pygame.quit()
